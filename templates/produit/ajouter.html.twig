{% extends 'base.html.twig' %}

{% block title %}Ajouter un Produit{% endblock %}

{% block body %}
<div class="container mt-4">
  <h2 class="text-center mb-4">Ajouter un Produit</h2>
  <div class="card shadow border-0 mb-4">
    <div class="card-body">
      {{ form_start(form, {'attr': {'id': 'produit-form'}}) }}

      <!-- Code-barres -->
      <div class="row mb-4 align-items-center">
        <div class="col-md-2">
          {{ form_label(form.codeBarre, null, {'label_attr': {'class': 'form-label fw-bold'}}) }}
        </div>
        <div class="col-md-10">
          {{ form_widget(form.codeBarre, {
            'attr': {
              'class': 'form-control',
              'id': 'codeBarreInput',
              'value': app.request.query.get('scanned')
            }
          }) }}
          <div class="invalid-feedback">Le code-barres doit contenir exactement 19 chiffres.</div>
        </div>
      </div>

      <!-- Ajouté par -->
      <div class="row mb-4">
        <div class="col-md-2">
          <label class="form-label fw-semibold">Ajouté par</label>
        </div>
        <div class="col-md-10">
          <input type="text" class="form-control bg-light border-0" value="{{ app.user.prenom ~ ' ' ~ app.user.nomUser }}" readonly>
        </div>
      </div>

      <!-- Autres champs -->
      {% set champs = [
        ['categorie', 'marque'],
        ['modele', 'taille'],
        ['numeroSerie', 'cpu'],
        ['frequenceCpu', 'carteGraphique'],
        ['memoireVideo', 'ram'],
        ['typeRam', 'stockage'],
        ['typeStockage', 'codeEtagere'],
        ['statut', '']
      ] %}

      {% for pair in champs %}
        <div class="row mb-3 align-items-center">
          <div class="col-md-2 text-end">{{ form_label(attribute(form, pair[0]), null, {'label_attr': {'class': 'form-label fw-semibold'}}) }}</div>
          <div class="col-md-4">
            {{ form_widget(attribute(form, pair[0]), {'attr': {'class': 'form-control shadow-sm required-field'}}) }}
          </div>
          {% if pair[1] %}
            <div class="col-md-2 text-end">
              {{ form_label(attribute(form, pair[1]), null, {'label_attr': {'class': 'form-label fw-semibold'}}) }}
            </div>
            <div class="col-md-4">
              {{ form_widget(attribute(form, pair[1]), {'attr': {'class': 'form-control shadow-sm'}}) }}
            </div>
          {% endif %}
        </div>
      {% endfor %}

      <!-- Boutons -->
      <div class="row justify-content-center mt-4">
        <div class="col-md-4 text-center">
          <a href="{{ path('app_produit') }}" class="btn btn-secondary mt-4">
            <i class="bi bi-arrow-left"></i> Retour
          </a>
        </div>
        <div class="col-md-4 text-center">
          <button type="submit" class="btn btn-success mt-4 px-5">
            <i class="bi bi-plus-circle"></i> Enregistrer
          </button>
        </div>
      </div>

      {{ form_end(form) }}
    </div>
  </div>
</div>

<!-- SweetAlert & Script AJAX -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener('DOMContentLoaded', () => {
  const form = document.getElementById('produit-form');
  const codeInput = document.getElementById('codeBarreInput');
  
  if (!form) {
    console.error('Le formulaire produit-form n\'a pas été trouvé');
    return;
  }

  form.addEventListener('submit', function (e) {
    e.preventDefault();

    let isValid = true;
    
    // Vérification du code-barres seulement si l'input existe
    if (codeInput) {
      const code = codeInput.value.trim();
      if (!/^\d{19}$/.test(code)) {
        codeInput.classList.add('is-invalid');
        isValid = false;
      } else {
        codeInput.classList.remove('is-invalid');
      }
    }

    // Vérification des champs requis
    const requiredFields = document.querySelectorAll('.required-field');
    requiredFields.forEach(field => {
      if (!field.value.trim()) {
        field.classList.add('is-invalid');
        isValid = false;
      } else {
        field.classList.remove('is-invalid');
      }
    });

    if (!isValid) {
      Swal.fire({
        icon: 'warning',
        title: 'Champs requis',
        text: 'Veuillez remplir correctement tous les champs obligatoires.'
      });
      return;
    }

    const formData = new FormData(form);

    fetch('{{ path('produit_ajouter') }}', {
      method: 'POST',
      body: formData
    })
    .then(res => res.json())
    .then(data => {
      if (data.status === 'exists') {
        Swal.fire({
          icon: 'warning',
          title: 'Code-barres déjà présent',
          text: data.message
        });
      } else if (data.status === 'success') {
        Swal.fire({
          icon: 'success',
          title: 'Produit enregistré',
          text: data.message
        }).then(() => {
          window.location.href = '{{ path('app_produit') }}';
        });
      }
    })
    .catch(err => {
      console.error(err);
      Swal.fire({
        icon: 'error',
        title: 'Erreur serveur',
        text: 'Une erreur est survenue lors de l\'enregistrement.'
      });
    });
  });
});
</script>
{% endblock %}
